{"version":3,"sources":["components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js"],"names":["TodoItem","props","todo","completed","id","title","useEffect","alert","className","type","checked","onChange","handleChangeProps","onClick","deleteTodoProps","style","fontStyle","color","opacity","textDecoration","TodosList","todos","map","Header","isInitialMount","useRef","bgColor","Math","floor","random","current","document","getElementById","innerHTML","backgroundColor","headerSpan","padding","lineHeight","fontSize","marginBottom","InputTodo","useState","inputText","setInputText","onSubmit","e","preventDefault","addTodoProps","placeholder","value","name","target","TodoContainer","setTodos","show","setShow","console","log","axios","get","then","response","data","newTodo","uuid","v4","filter","ReactDOM","render"],"mappings":"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","file":"static/js/main.a4054a83.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\n\nconst TodoItem = props => {\n  const completedStyle = {\n    fontStyle: \"italic\",\n    color: \"#d35e0f\",\n    opacity: 0.4,\n    textDecoration: \"line-through\",\n  };\n\n  const { completed, id, title } = props.todo;\n\n  useEffect(() => {\n    return () => {\n      alert(\"Item about to be deleted!\")\n    }\n  }, [])\n\n  return (\n    <li className=\"todo-item\">\n      <input\n        type=\"checkbox\"\n        checked={completed}\n        onChange={() => props.handleChangeProps(id)}\n      />\n      <button onClick={() => props.deleteTodoProps(id)}>Delete</button>\n      <span style={completed ? completedStyle : null}>{title}</span>\n    </li>\n  )\n};\n\nexport default TodoItem;\n\n// import React from \"react\";\n\n// class TodoItem extends React.Component {\n//   componentWillUnmount() {\n//     alert(\"Item about to be deleted!\");\n//   };\n\n//   render() {\n//     const completedStyle = {\n//       fontStyle: \"italic\",\n//       color: \"#d35e0f\",\n//       opacity: 0.4,\n//       textDecoration: \"line-through\",\n//     };\n\n//     const { completed, id, title } = this.props.todo;\n\n//     return (\n//       < li className=\"todo-item\">\n//         <input\n//           type=\"checkbox\"\n//           checked={completed}\n//           onChange={() => this.props.handleChangeProps(id)}\n//         />\n//         <button onClick={() => this.props.deleteTodoProps(id)}>\n//           Delete\n//         </button>\n//         <span style={completed ? completedStyle : null}>\n//           {title}\n//         </span>\n//       </li >\n//     );\n//   }\n// }\n\n// export default TodoItem;\n","import React from \"react\";\nimport TodoItem from \"./TodoItem\";\n\nconst TodosList = props => {\n  return (\n    <div>\n      {props.todos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          handleChangeProps={props.handleChangeProps}\n          deleteTodoProps={props.deleteTodoProps}\n        />\n      ))}\n    </div>\n  )\n};\n\nexport default TodosList;\n\n// import React from \"react\";\n// import TodoItem from \"./TodoItem\";\n\n// class TodosList extends React.Component {\n//   render() {\n//     return (\n//       <div>\n//         {this.props.todos.map(todo => (\n//           <TodoItem key={todo.id} todo={todo} handleChangeProps={this.props.handleChangeProps} deleteTodoProps={this.props.deleteTodoProps} />\n//         ))}\n//       </div>\n//     );\n//   };\n// };\n\n// export default TodosList;\n","import React, { useEffect, useRef } from \"react\";\n\nconst Header = props => {\n  const headerStyle = {\n    padding: \"20px 0\",\n    lineHeight: \"2em\",\n  };\n\n  const isInitialMount = useRef(true)\n  useEffect(() => {\n    var x = Math.floor(Math.random() * 256)\n    var y = Math.floor(Math.random() * 256)\n    var z = Math.floor(Math.random() * 256)\n    var bgColor = \"rgb(\" + x + \",\" + y + \",\" + z + \")\"\n  \n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      document.getElementById(\"inH1\").innerHTML = \"clicked\";\n      document.getElementById(\"inH1\").style.backgroundColor = bgColor;\n    }\n  }, [props.headerSpan]);\n\n  return (\n    <header style={headerStyle}>\n      <h1 style={{ fontSize: \"25px\", marginBottom: \"15px\" }}>\n        Simple Todo App <span id=\"inH1\"></span>\n      </h1>\n      <p style={{ fontSize: \"19px\" }}>\n        Please add to-dos item(s) through the input field\n      </p>\n    </header>\n  );\n};\n\nexport default Header;\n\n// import React, { Component } from \"react\"\n\n// class Header extends Component {\n//   componentDidUpdate(prevProps, prevState) {\n//     var x = Math.floor(Math.random() * 256);\n//     var y = Math.floor(Math.random() * 256);\n//     var z = Math.floor(Math.random() * 256);\n//     var bgColor = \"rgb(\" + x + \",\" + y + \",\" + z + \")\";\n\n//     if (prevProps.headerSpan !== this.props.headerSpan) {\n//       document.getElementById(\"inH1\").innerHTML = \"clicked\";\n//       document.getElementById(\"inH1\").style.backgroundColor = bgColor;\n//     }\n//   };\n\n//   render() {\n//     const headerStyle = {\n//       padding: \"20px 0\",\n//       lineHeight: \"2em\",\n//     }\n//     return (\n//       <header style={headerStyle}>\n//         <h1 style={{ fontSize: \"25px\", marginBottom: \"15px\" }}>\n//           Simple Todo App <span id=\"inH1\"></span>\n//         </h1>\n//         <p style={{ fontSize: \"19px\" }}>\n//           Please add to-dos item(s) through the input field\n//         </p>\n//       </header>\n//     )\n//   }\n// }\n\n// export default Header\n","import React, { useState } from \"react\";\n\nconst InputTodo = props => {\n  const [inputText, setInputText] = useState({\n    title: \"\",\n  });\n\n  const onChange = e => {\n    setInputText({\n      ...inputText,\n      [e.target.name]: e.target.value,\n    })\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    props.addTodoProps(inputText.title)\n    setInputText({\n      title: \"\",\n    })\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form-container\">\n      <input\n        type=\"text\"\n        className=\"input-text\"\n        placeholder=\"Add todo...\"\n        value={inputText.title}\n        name=\"title\"\n        onChange={onChange}\n      />\n      <input type=\"submit\" className=\"input-submit\" value=\"Submit\" />\n    </form>\n  )\n};\n\nexport default InputTodo;\n\n// import React, { Component } from \"react\";\n\n// class InputTodo extends Component {\n//   state = {\n//     title: \"\"\n//   };\n\n//   onChange = e => {\n//     this.setState({\n//       [e.target.name]: e.target.value\n//     });\n//   };\n\n//   handleSubmit = e => {\n//     e.preventDefault();\n//     this.props.addTodoProps(this.state.title);\n//     this.setState({\n//       title: \"\"\n//     });\n//   };\n\n//   render() {\n//     return (\n//       <form onSubmit={this.handleSubmit} className=\"form-container\">\n//         <input type=\"text\" placeholder=\"Add Todo...\" value={this.state.title} name=\"title\" onChange={this.onChange} />;\n//         <input type=\"submit\" value=\"Submit\" />;\n//       </form>\n//     );\n//   };\n// };\n\n// export default InputTodo;\n","import React, { useState, useEffect } from \"react\"\nimport TodosList from \"./TodosList\"\nimport Header from \"./Header\"\nimport InputTodo from \"./InputTodo\"\nimport axios from \"axios\"\nimport { v4 as uuid} from \"uuid\"\n\nconst TodoContainer = props => {\n  const [todos, setTodos] = useState([])\n  const [show, setShow] = useState(false)\n\n  const handleChange = id => {\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed\n        }\n        return todo\n      })\n    )\n    setShow(!show)\n  }\n\n  const delTodo = id => {\n    setTodos([\n      ...todos.filter(todo => {\n        return todo.id !== id\n      }),\n    ])\n  }\n\n  const addTodoItem = title => {\n    const newTodo = {\n      id: uuid.v4(),\n      title: title,\n      completed: false,\n    }\n    setTodos([...todos, newTodo])\n  }\n\n  useEffect(() => {\n    console.log(\"test run\");\n    axios\n    .get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\n    .then(response => setTodos(response.data));\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <Header headerSpan={show} />\n      <InputTodo addTodoProps={addTodoItem} />\n      <TodosList\n        todos={todos}\n        handleChangeProps={handleChange}\n        deleteTodoProps={delTodo}\n      />\n    </div>\n  )\n}\n\nexport default TodoContainer\n\n// import React from \"react\";\n// import TodosList from \"./TodosList\";\n// import Header from \"./Header\";\n// import InputTodo from \"./InputTodo\";\n// import axios from \"axios\";\n\n// class TodoContainer extends React.Component {\n//   state = {\n//     todos: [],\n//     show: false,\n//   };\n\n//   handleChange = (id) => {\n//     this.setState(prevState => ({\n//       todos: prevState.todos.map(todo => {\n//         if (todo.id === id) {\n//           todo.completed = !todo.completed;\n//         }\n//         return todo;\n//       }),\n//       show: !this.state.show,\n//     }));\n//   };\n\n//   delTodo = id => {\n//     axios\n//     .delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n//     .then(reponse =>\n//       this.setState({\n//         todos: [\n//           ...this.state.todos.filter(todo => {\n//             return todo.id !== id\n//           }),\n//         ],\n//       })\n//     );\n//   };\n\n//   addTodoItem = title => {\n//     axios\n//       .post(\"https://jsonplaceholder.typicode.com/todos\", {\n//         title: title,\n//         completed: false,\n//       })\n//       .then(response =>\n//         this.setState({\n//           todos: [...this.state.todos, response.data],\n//         })\n//       );\n//   };\n\n//   componentDidMount() {\n//     axios.get(\"https://jsonplaceholder.typicode.com/todos?\", {\n//       params: {\n//         _limit: 10\n//       },\n//     })\n//       .then(response => this.setState({ todos: response.data }));\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"container\">\n//         <Header headerSpan={this.state.show} />\n//         <InputTodo addTodoProps={this.addTodoItem} />\n//         <TodosList\n//           todos={this.state.todos}\n//           handleChangeProps={this.handleChange}\n//           deleteTodoProps={this.delTodo}\n//         />\n//       </div>\n//     );\n//   };\n// };\n\n// export default TodoContainer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport TodoContainer from \"./components/TodoContainer\";\nimport \"./App.css\"\n\nReactDOM.render(< TodoContainer />, document.getElementById(\"root\"));\n"],"sourceRoot":""}